[tox]
requires =
    tox>=4.2
env_list =
    fix
    py310
    py39
    py38
    py37
    py36
    pypy3
    type
    readme
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
extras =
    test
pass_env =
    SSL_CERT_FILE
set_env =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}}
    _COVERAGE_SRC = {envsitepackagesdir}{/}pytest_print
    _COVERAGE_TEST = {toxinidir}{/}tests
commands =
    coverage erase
    coverage run -m pytest {tty:--color=yes} \
      --junitxml {toxworkdir}{/}junit.{envname}.xml \
      {posargs:tests}
    coverage combine
    coverage report
    coverage html -d {envtmpdir}{/}htmlcov

[testenv:fix]
description = run static analysis and style check using flake8
skip_install = true
deps =
    pre-commit>=3.2.2
pass_env =
    {[testenv]passenv}
    HOMEPATH
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
deps =
    mypy==1.2
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy src/pytest_print
    mypy tests

[testenv:readme]
description = check that the long description is valid
skip_install = true
deps =
    build[virtualenv]>=0.10
    twine>=4.0.2
change_dir = {toxinidir}
commands =
    python -m build -s -w . -o {envtmpdir}
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
package = editable
extras =
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'
